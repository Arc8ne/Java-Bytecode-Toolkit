<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Java_Bytecode_Toolkit">
    <Style TargetType="{x:Type local:FileSystemTreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileSystemTreeViewItem}">
                    <TreeViewItem Padding="6"
                                  ItemsSource="{TemplateBinding ItemsSource}"
                                  ItemsPanel="{TemplateBinding ItemsPanel}"
                                  ItemStringFormat="{TemplateBinding ItemStringFormat}">
                        <TreeViewItem.Header>
                            <DockPanel LastChildFill="False">
                                <ContentPresenter DockPanel.Dock="Left" Width="16" Height="16" Content="{DynamicResource FileIcon}"/>

                                <TextBlock DockPanel.Dock="Left" Margin="6 0 0 0" Text="{Binding Path=Name}"></TextBlock>
                            </DockPanel>
                        </TreeViewItem.Header>

                        <TreeViewItem.ContextMenu>
                            <ContextMenu>
                                <MenuItem Name="CloseContextMenuItem" Header="Close">

                                </MenuItem>

                                <MenuItem Name="ExportAsXMLFileContextMenuItem" Header="Export as XML file">

                                </MenuItem>
                            </ContextMenu>
                        </TreeViewItem.ContextMenu>
                    </TreeViewItem>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ExtendedButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExtendedButton}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock Text="{TemplateBinding Content}">
                            
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Spinner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Spinner}">
                    <Canvas Name="MainCanvas"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <Canvas.LayoutTransform>
                            <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Angle}"/>
                        </Canvas.LayoutTransform>
                        
                        <Path Stroke="#333333" StrokeThickness="2" Data="M0,12 A12,12 90 0 1 24,12 M24,12 A12,12 90 0 1 0,12">

                        </Path>

                        <Path Stroke="LightGray" StrokeThickness="2" Data="M6,1.6 A12,12 45 0 1 18,1.6">

                        </Path>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Angle" Duration="0:0:2" From="0" To="360" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
